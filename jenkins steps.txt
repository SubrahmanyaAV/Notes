To build Normal java projects

Step 1: Create a repository in git hub and add a file
Step 2: Create an item in jenkins and give a description
Step 3: Choose JDK version
Step 4: Repo URL and choose branch specifier(!master)
Step 5: build steps and give executable commands [javac HelloWorld.java ,java HelloWorld]
Step 6: Save and build now 

___________________________________________________________________

Dashboard > Manage Jenkins > tools

if not installed
Install Maven Integration Plugin 

Maven Configuration
Maven => name-MVN3
MAVEN_HOME => C:\Java\Java PPT\Maven\apache-maven-3.8.6-bin\apache-maven-3.8.6

Save

__________________________________________________________________

To build Maven project

Step 1:name choose maven project
Step 2: Create an item in jenkins and give a description
Step 3: Choose JDK version
Step 4:Repo URL and choose branch specifier(!master)
step 5: pre steps- Invoke top-level Maven targets and specifythe goals
step 6:Build -specifythe goals(clean compile)
Step 7 Save and build now 


___________________________________________________________________

Email Notifications 

Step 1: Install Email extention Plugin

Step 2: to Configure Email Notifications

	  go to Dashboard > Manage Jenkins > System >

Step 3: Extended E-mail Notification

	  SMTP server ==> smtp.gmail.com

	  SMTP Port ==> 25


step 4: E-mail Notification

	  SMTP server ==>  smtp.gmail.com

	  Default user e-mail suffix ?  ==> @gmail.com


Step 5: Select Advanced in E-mail Notification

	  Use SMTP Authentication? ==> check the box

 	  User Name ==> abcd@gmail.com

 	  Password ==> to get the password 

Google account > Manage Google Account > Security > 2 step verification (should be ON) > 
App Passwords > Select App > choose Mail > Select Device (your device) > Generate

	 for Password ==> enter the generated password

 	 Use SSL ? ==> check the box 

  	 Use TLS ==> leave it as it is dont check the box

	 SMTP Port ?  ==> 465

	 Reply-To Address ===> give your email address

 	 charset ==> UTF-8

Step 5: to check email 

	 Test configuration by sending test e-mail ==> check the box
 	 Test e-mail recipient ==>  abcd@gmail.com

 	 Test Configuration

SAVE

Step 6: Create job and Configure git and jdk

	  in Post build Actions

	  E-mail Notification ?

	  Recipients ==> udmn07@gmail.com

	  Send e-mail for every unstable build ? ==> check the box 

SAVE

________________________________________________________________

Warnings Next Generation Plugin (Previously known as PMD ==> Programming mistake detector)

Stage 1: PMD ==> unneccessary imports , variables (if code is not used it will show in this PMD)

Step 1: Warnings Next Generation Plugin


Step 2: add the below code in pom.xml(GitHub Pom.xml file)

<reporting>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.7</version>
            <configuration>
               <rulesets>
                  <ruleset>/rulesets/basic.xml</ruleset>
               </rulesets>
            </configuration>
        </plugin>
    </plugins>
</reporting>  



Step 3: Post-build steps 
	  Maven Version ==> MVN3 if not add the version(go to Dashboard > Manage Jenkins > Tools)
		  Goals ==> test pmd:pmd

Add Tool ==> select PMD from the dropdown




Stage 2: CheckStyle ==> should be in order

	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.17</version>
          <reportSets>
            <reportSet>
             <reports>
                <report>checkstyle</report>
              </reports>
            </reportSet>
          </reportSets>
     	</plugin>


 Post-build steps 
	  Maven Version ==> MVN3 if not add the version(go to Dashboard > Manage Jenkins > Tools )
		  Goals ==> test checkstyle:checkstyle

Add Tool ==> select checkstyle from the dropdown


Stage 3: FindBugs ==> this will find the bugs in our code

private final String msg = "Hello RCB";  //add this code FindBugs 

	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-FindBugs-plugin</artifactId>
          <version>2.17</version>
          <reportSets>
            <reportSet>
             <reports>
                <report>FindBugs</report>
              </reports>
            </reportSet>
          </reportSets>
      </plugin>

Step 3: Post-build steps 
	  Maven Version ==> MVN3 if not add the version(go to Dashboard > Manage Jenkins > Tools)
		  Goals ==> test findbugs:findbugs

Add Tool ==> select findbugs from the dropdown

---------------------------------------------------------
all in one(pmd,checkstyle,findbugs) for pom.xml


<reporting>
    <plugins>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.7</version>
            <configuration>
               <rulesets>
                  <ruleset>/rulesets/basic.xml</ruleset>
               </rulesets>
            </configuration>
        </plugin>

	<plugin>
	    <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.17</version>
          <reportSets>
            <reportSet>
             <reports>
                <report>checkstyle</report>
              </reports>
            </reportSet>
          </reportSets>
     	</plugin>

	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-FindBugs-plugin</artifactId>
          <version>2.17</version>
          <reportSets>
            <reportSet>
             <reports>
                <report>FindBugs</report>
              </reports>
            </reportSet>
          </reportSets>
      </plugin>

    </plugins>
</reporting>  


Step 3: Post-build steps 
	  Maven Version ==> MVN3 if not add the version(go to Dashboard > Manage Jenkins > Tools)
		  Goals ==> test pmd:pmd checkstyle:checkstyle findbugs:findbugs

Add 3 Tools ==> select PMD,checkstyle,findbugs from the dropdown

__________________________________________________________________

Passing Parameter 

step 1: create a new item and name it ==> PassingParamJob 

step 2: select This project is parameterized ?
	  Name ==> Branch 
	  Choices ==> main , rfe , integration

Step 3: select jdk and git then add the URL

step 4: Build Steps
	  Execute Windows with batch command ?

SAVE

Step 5: Build with Parameter
	  Select the branch > build




_____________________________________________________________________

Deploy projects 

first check manually

go to localapath workspace
 